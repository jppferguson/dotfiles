#!/usr/bin/env bash
#
# Bootstrap installs things.
#
###############################################################################

cd "$(dirname "$0")/.."
DOTFILES_TOPIC_ROOT=$(pwd)/topics
CUR_UNIX="`date +%s`"
BACKUP_DIR="~/.dotfiles_backup/${CUR_UNIX}/"

set -e

# Include the general functions
. ./functions/general


create_localrc () {
  LOCALRC=~/.localrc
  if [ -f "$LOCALRC" ]
  then
    print_success "skipped $LOCALRC (already exists)"
  else
    touch "$LOCALRC"
    print_success "created $LOCALRC"
  fi
}

backup () {
  mkdir -p "$BACKUP_DIR"; mv "$1" "$_"
  print_success "backed up $1"
}

setup_gitconfig () {
  if ! [ -f topics/git/gitconfig.symlink ]
  then
    info 'setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi

    user ' - What is your full name (used for git commits)?'
    read -e git_authorname
    user ' - What email do you want to use for git commits?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" topics/git/gitconfig.symlink.example > topics/git/gitconfig.symlink

    print_success 'gitconfig'
  fi
}


link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then
      user "File already exists: $(basename "$src"), what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
      read -n 1 action

      case "$action" in
        o )
          overwrite=true;;
        O )
          overwrite_all=true;;
        b )
          backup=true;;
        B )
          backup_all=true;;
        s )
          skip=true;;
        S )
          skip_all=true;;
        * )
          ;;
      esac
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      print_success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      # mv "$dst" "${dst}.backup"
      # print_success "moved $dst to ${dst}.backup"
      backup "$dst"
    fi

    if [ "$skip" == "true" ]
    then
      print_success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    print_success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find "$DOTFILES_TOPIC_ROOT" -maxdepth 2 -name '*.symlink')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

create_localrc
setup_gitconfig
install_dotfiles
